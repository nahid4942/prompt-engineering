// ==========================================// MAIN JAVASCRIPT FILE - SAREE SHOP// ==========================================// Global Variableslet currentSlide = 0;let cartItems = [];let wishlistItems = [];let isMenuOpen = false;// DOM Elementsconst loadingScreen = document.getElementById('loading-screen');const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');const navMenu = document.querySelector('.nav-menu');const searchIcon = document.querySelector('.search-icon');const searchOverlay = document.getElementById('search-overlay');const closeSearch = document.querySelector('.close-search');const cartIcon = document.querySelector('.cart-icon');const cartSidebar = document.getElementById('cart-sidebar');const closeCart = document.querySelector('.close-cart');const backToTop = document.getElementById('back-to-top');// ==========================================// INITIALIZATION// ==========================================document.addEventListener('DOMContentLoaded', function() {    initializeWebsite();});function initializeWebsite() {    // Hide loading screen    setTimeout(() => {        if (loadingScreen) {            loadingScreen.classList.add('loading-hidden');        }    }, 1500);    // Initialize all components    initializeHeroSlider();    initializeMobileMenu();    initializeSearch();    initializeCart();    initializeBackToTop();    initializeProductCards();    initializeNewsletterForm();    initializeScrollAnimations();        // Load cart from localStorage    loadCartFromStorage();    updateCartDisplay();}// ==========================================// HERO SLIDER// ==========================================function initializeHeroSlider() {    const slides = document.querySelectorAll('.hero-slide');    const prevButton = document.querySelector('.hero-prev');    const nextButton = document.querySelector('.hero-next');    const indicators = document.querySelectorAll('.slide-indicator');        if (slides.length === 0) return;    function showSlide(index) {        slides.forEach((slide, i) => {            slide.classList.toggle('active', i === index);        });                indicators.forEach((indicator, i) => {            indicator.classList.toggle('active', i === index);        });    }    function nextSlide() {        currentSlide = (currentSlide + 1) % slides.length;        showSlide(currentSlide);    }    function prevSlide() {        currentSlide = (currentSlide - 1 + slides.length) % slides.length;        showSlide(currentSlide);    }    // Event listeners    if (nextButton) nextButton.addEventListener('click', nextSlide);    if (prevButton) prevButton.addEventListener('click', prevSlide);        indicators.forEach((indicator, index) => {        indicator.addEventListener('click', () => {            currentSlide = index;            showSlide(currentSlide);        });    });    // Auto-slide functionality    setInterval(nextSlide, 5000);}// ==========================================// MOBILE MENU// ==========================================function initializeMobileMenu() {    if (!mobileMenuToggle || !navMenu) return;    mobileMenuToggle.addEventListener('click', toggleMobileMenu);    // Close mobile menu when clicking on a link    const navLinks = navMenu.querySelectorAll('a');    navLinks.forEach(link => {        link.addEventListener('click', () => {            if (isMenuOpen) {                toggleMobileMenu();            }        });    });    // Close mobile menu when clicking outside    document.addEventListener('click', (e) => {        if (isMenuOpen && !navMenu.contains(e.target) && !mobileMenuToggle.contains(e.target)) {            toggleMobileMenu();        }    });}function toggleMobileMenu() {    isMenuOpen = !isMenuOpen;    navMenu.classList.toggle('active');    document.body.classList.toggle('no-scroll', isMenuOpen);        // Update hamburger icon    const spans = mobileMenuToggle.querySelectorAll('span');    spans.forEach(span => span.classList.toggle('active'));}// ==========================================// SEARCH FUNCTIONALITY// ==========================================function initializeSearch() {    if (!searchIcon || !searchOverlay || !closeSearch) return;    const searchInput = document.getElementById('search-input');    const searchResults = document.getElementById('search-results');    searchIcon.addEventListener('click', openSearch);    closeSearch.addEventListener('click', closeSearchOverlay);        // Close search with Escape key    document.addEventListener('keydown', (e) => {        if (e.key === 'Escape' && searchOverlay.classList.contains('active')) {            closeSearchOverlay();        }    });    if (searchInput) {        searchInput.addEventListener('input', performSearch);    }    function openSearch() {        searchOverlay.classList.add('active');        document.body.classList.add('no-scroll');        if (searchInput) {            setTimeout(() => searchInput.focus(), 300);        }    }    function closeSearchOverlay() {        searchOverlay.classList.remove('active');        document.body.classList.remove('no-scroll');        if (searchInput) {            searchInput.value = '';        }        if (searchResults) {            searchResults.innerHTML = '';        }    }    function performSearch() {        const query = searchInput.value.toLowerCase().trim();                if (query.length < 2) {            searchResults.innerHTML = '';            return;        }        // Mock search results (replace with actual search logic)        const mockResults = [            { title: 'Silk Saree Collection', type: 'Category', url: '#' },            { title: 'Wedding Sarees', type: 'Category', url: '#' },            { title: 'Designer Blouses', type: 'Product', url: '#' },            { title: 'Traditional Sarees', type: 'Category', url: '#' }        ].filter(item => item.title.toLowerCase().includes(query));        displaySearchResults(mockResults);    }    function displaySearchResults(results) {        if (results.length === 0) {            searchResults.innerHTML = '<div class="no-results">No results found</div>';            return;        }        const html = results.map(result => `            <div class="search-result-item">                <a href="${result.url}">                    <span class="result-title">${result.title}</span>                    <span class="result-type">${result.type}</span>                </a>            </div>        `).join('');        searchResults.innerHTML = html;    }}// ==========================================// SHOPPING CART// ==========================================function initializeCart() {    if (!cartIcon || !cartSidebar || !closeCart) return;    cartIcon.addEventListener('click', openCart);    closeCart.addEventListener('click', closeCartSidebar);    // Close cart when clicking outside    document.addEventListener('click', (e) => {        if (cartSidebar.classList.contains('active') &&             !cartSidebar.contains(e.target) &&             !cartIcon.contains(e.target)) {            closeCartSidebar();        }    });}function openCart() {    cartSidebar.classList.add('active');    document.body.classList.add('no-scroll');}function closeCartSidebar() {    cartSidebar.classList.remove('active');    document.body.classList.remove('no-scroll');}function addToCart(productId, name, price, image) {    const existingItem = cartItems.find(item => item.id === productId);        if (existingItem) {        existingItem.quantity += 1;    } else {        cartItems.push({            id: productId,            name: name,            price: price,            image: image,            quantity: 1        });    }        updateCartDisplay();    saveCartToStorage();    showToast('Product added to cart!');}function removeFromCart(productId) {    cartItems = cartItems.filter(item => item.id !== productId);    updateCartDisplay();    saveCartToStorage();    showToast('Product removed from cart!');}function updateQuantity(productId, newQuantity) {    const item = cartItems.find(item => item.id === productId);    if (item) {        if (newQuantity <= 0) {            removeFromCart(productId);        } else {            item.quantity = newQuantity;            updateCartDisplay();            saveCartToStorage();        }    }}function updateCartDisplay() {    const cartCount = document.querySelector('.cart-count');    const cartItemsContainer = document.querySelector('.cart-items');    const cartTotal = document.querySelector('.cart-total');    const cartSubtotal = document.querySelector('.cart-subtotal');    // Update cart count    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);    if (cartCount) {        cartCount.textContent = totalItems;        cartCount.style.display = totalItems > 0 ? 'block' : 'none';    }    // Update cart items    if (cartItemsContainer) {        if (cartItems.length === 0) {            cartItemsContainer.innerHTML = '<div class="empty-cart">Your cart is empty</div>';        } else {            cartItemsContainer.innerHTML = cartItems.map(item => `                <div class="cart-item">                    <img src="${item.image}" alt="${item.name}">                    <div class="cart-item-details">                        <h4>${item.name}</h4>                        <div class="cart-item-price">â‚¹${item.price}</div>                        <div class="cart-item-controls">                            <button class="quantity-btn" onclick="updateQuantity('${item.id}', ${item.quantity - 1})">-</button>                            <span class="quantity">${item.quantity}</span>                            <button class="quantity-btn" onclick="updateQuantity('${item.id}', ${item.quantity + 1})">+</button>                        </div>                    </div>                    <button class="remove-item" onclick="removeFromCart('${item.id}')">                        <i class="fas fa-trash"></i>                    </button>                </div>            `).join('');        }    }    // Update cart total    const total = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);    if (cartTotal) cartTotal.textContent = `â‚¹${total.toFixed(2)}`;    if (cartSubtotal) cartSubtotal.textContent = `â‚¹${total.toFixed(2)}`;}function saveCartToStorage() {    localStorage.setItem('sareShopCart', JSON.stringify(cartItems));}function loadCartFromStorage() {    const savedCart = localStorage.getItem('sareShopCart');    if (savedCart) {        cartItems = JSON.parse(savedCart);    }}// ==========================================// BACK TO TOP BUTTON// ==========================================function initializeBackToTop() {    if (!backToTop) return;    window.addEventListener('scroll', () => {        if (window.pageYOffset > 300) {            backToTop.classList.add('visible');        } else {            backToTop.classList.remove('visible');        }    });    backToTop.addEventListener('click', () => {        window.scrollTo({            top: 0,            behavior: 'smooth'        });    });}// ==========================================// PRODUCT CARDS// ==========================================function initializeProductCards() {    const productCards = document.querySelectorAll('.product-card');        productCards.forEach(card => {        const addToCartBtn = card.querySelector('.add-to-cart');        const wishlistBtn = card.querySelector('.wishlist-btn');                if (addToCartBtn) {            addToCartBtn.addEventListener('click', (e) => {                e.preventDefault();                const productId = card.dataset.productId || Math.random().toString(36).substr(2, 9);                const name = card.querySelector('.product-title')?.textContent || 'Product';                const price = parseFloat(card.querySelector('.product-price')?.textContent.replace('â‚¹', '').replace(',', '') || '0');                const image = card.querySelector('.product-image img')?.src || '';                                addToCart(productId, name, price, image);            });        }                if (wishlistBtn) {            wishlistBtn.addEventListener('click', (e) => {                e.preventDefault();                wishlistBtn.classList.toggle('active');                const isActive = wishlistBtn.classList.contains('active');                showToast(isActive ? 'Added to wishlist!' : 'Removed from wishlist!');            });        }    });}// ==========================================// NEWSLETTER FORM// ==========================================function initializeNewsletterForm() {    const newsletterForm = document.querySelector('.newsletter-form');        if (newsletterForm) {        newsletterForm.addEventListener('submit', (e) => {            e.preventDefault();            const email = newsletterForm.querySelector('input[type="email"]').value;                        if (email) {                showToast('Successfully subscribed to newsletter!');                newsletterForm.reset();            }        });    }}// ==========================================// SCROLL ANIMATIONS// ==========================================function initializeScrollAnimations() {    const observerOptions = {        threshold: 0.1,        rootMargin: '0px 0px -50px 0px'    };    const observer = new IntersectionObserver((entries) => {        entries.forEach(entry => {            if (entry.isIntersecting) {                entry.target.classList.add('fade-in');            }        });    }, observerOptions);    // Observe elements for animation    const elementsToAnimate = document.querySelectorAll('.product-card, .story-content, .section-title');    elementsToAnimate.forEach(el => observer.observe(el));}// ==========================================// UTILITY FUNCTIONS// ==========================================function showToast(message) {    // Create simple toast notification    const toast = document.createElement('div');    toast.className = 'toast-notification';    toast.textContent = message;    toast.style.cssText = `        position: fixed;        bottom: 20px;        right: 20px;        background: var(--primary-color);        color: white;        padding: 1rem 1.5rem;        border-radius: var(--border-radius);        z-index: 10000;        animation: slideInRight 0.3s ease;    `;        document.body.appendChild(toast);        setTimeout(() => {        toast.style.animation = 'slideOutRight 0.3s ease';        setTimeout(() => {            document.body.removeChild(toast);        }, 300);    }, 3000);}// ==========================================// GLOBAL EVENT LISTENERS// ==========================================// Handle dropdown menusdocument.addEventListener('click', (e) => {    const dropdowns = document.querySelectorAll('.dropdown');    dropdowns.forEach(dropdown => {        if (!dropdown.contains(e.target)) {            dropdown.classList.remove('active');        }    });});// Handle keyboard navigationdocument.addEventListener('keydown', (e) => {    if (e.key === 'Escape') {        // Close any open overlays        closeCartSidebar();        if (searchOverlay && searchOverlay.classList.contains('active')) {            closeSearchOverlay();        }        if (isMenuOpen) {            toggleMobileMenu();        }    }});// Smooth scrolling for anchor linksdocument.querySelectorAll('a[href^="#"]').forEach(anchor => {    anchor.addEventListener('click', function (e) {        e.preventDefault();        const target = document.querySelector(this.getAttribute('href'));        if (target) {            target.scrollIntoView({                behavior: 'smooth',                block: 'start'            });        }    });});